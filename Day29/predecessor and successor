/*************************************************************

    Following is the Binary Tree node structure

    template <typename T>

    class BinaryTreeNode
    {
    public :
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }

        ~BinaryTreeNode() {
            if (left)
            {
                delete left;
            }
            if (right)
            {
                delete right;
            }
        }
    };

*************************************************************/
void inorder(BinaryTreeNode<int>* root,vector<int>&in){
    if(!root)return ;
    inorder(root->left,in);
    in.push_back(root->data);
    inorder(root->right,in);
}
pair<int,int> predecessorSuccessor(BinaryTreeNode<int>* root, int key)
{
    // Write your code here.
    vector<int> in;
    inorder(root,in);
    int x,y;
    for(int i=0;i<in.size();i++){
        if(in[i]==key){
            if(i-1>=0) x=in[i-1];
            else x=-1;
            if(i+1<in.size()) y=in[i+1];
            else y=-1;
            
            
        }
    }
    return {x,y};
}
