/*************************************************************

    Following is the Binary Tree node structure

    class BinaryTreeNode
    {
    public :
        T data;
        BinaryTreeNode < T > *left;
        BinaryTreeNode < T > *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

*************************************************************/
void changeTree(BinaryTreeNode < int > * root) {
    // Write your code here.
    if(!root||(!root->left&&!root->right))return;
    
    int sum=(root->left?root->left->data:0)+(root->right?root->right->data:0);
//     if(root->data<sum)
//     root->data=sum;
     if(sum<root->data) {
   if(root->left){root->left->data+=root->data-sum;
                 
                 }
        else{ root->right->data+=root->data-sum;
          }
       
        
    }
    changeTree(root->left);
    changeTree(root->right);
    root->data=(root->left?root->left->data:0)+(root->right?root->right->data:0);
        // Base Cases.
//     if (root == NULL) {
//         return;
//     }

//     if (root->left == NULL && root->right == NULL) {
//         return;
//     }

//     int difference = root->data - ((root->left ? root->left->data : 0) + (root->right ? root->right->data : 0));

   
//     if (difference > 0) {
//         if (root->left) {
//             root->left->data += difference;
//         }
//         else {
//             root->right->data += difference;
//         }
//     }

   
//     changeTree(root->left);
//     changeTree(root->right);

 
//     root->data =  ((root->left ? root->left->data : 0) + (root->right ? root->right->data : 0));
    
}  
