#include<queue>
void findMedian(int *arr, int n)
{
    // Write your code here
    if(n==0)return;
    priority_queue<int>maxHeap;
    priority_queue<int,vector<int>,greater<int>>minHeap;
    maxHeap.push(arr[0]);
    int med=arr[0];
    cout<<med<<" ";
    for(int i=1;i<n;i++){
        int x=arr[i];
        if(maxHeap.size()>minHeap.size()){
            if(x<med){
                minHeap.push(maxHeap.top());
                maxHeap.pop();
                maxHeap.push(x);
            }
            else minHeap.push(x);
            med=(minHeap.top()+maxHeap.top())/2;
            
        }
        else if(maxHeap.size()==minHeap.size()){
            if(x<med){
                maxHeap.push(x);
                med=maxHeap.top();
            }
            else{
                minHeap.push(x);
                med=minHeap.top();
            }
        }
        else{
            if(x>med){
                maxHeap.push(minHeap.top());
                minHeap.pop();
                minHeap.push(x);
            }
            else{
                maxHeap.push(x);
            }
            med=(maxHeap.top()+minHeap.top())/2;
        }
        cout<<med<<" ";
    }
}
