/************************************************************

    Following is the TreeNode class structure

    template <typename T>
    class TreeNode {
       public:
        T data;
        TreeNode<T> *left;
        TreeNode<T> *right;

        TreeNode(T data) {
            this->data = data;
            left = NULL;
            right = NULL;
        }
    };

************************************************************/
// int LCA(TreeNode<int>*root,int x,int y){
//     if(!root)return -1;
//     if(root->data==x||root->data==y)return root->data;
//    int left=LCA(root->left,x,y);
//     int right=LCA(root->right,x,y);
//     if(left!=-1&&right!=-1)return root->data;
//     return left!=-1?left:right;
// }
int lowestCommonAncestor(TreeNode<int> *root, int x, int y)
{
	//    Write you
    if(!root)return -1;
    if(root->data==x||root->data==y)return root->data;
   int left=lowestCommonAncestor(root->left,x,y);
    int right=lowestCommonAncestor(root->right,x,y);
    if(left!=-1&&right!=-1)return root->data;
    return left!=-1?left:right;
   
}                                                                     
