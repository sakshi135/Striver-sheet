/************************************************************

    Following is the Binary Tree node structure:

    class BinaryTreeNode
    {
    public :
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };


************************************************************/

void traversal(BinaryTreeNode<int>*root,vector<int>&in,vector<int> &pre,vector<int>&post){
    if(!root)return ;
    pre.push_back(root->data);
    traversal(root->left,in,pre,post);
        in.push_back(root->data);
    traversal(root->right,in,pre,post);
    post.push_back(root->data);
}
vector<vector<int>> getTreeTraversal(BinaryTreeNode<int> *root){
    // Write your code here.
     vector<int>pre;
    vector<int>in;
    vector<int>post;
traversal(root,in,pre,post);
   vector<vector<int>> v;
    v.push_back(in);
    v.push_back(pre);
    v.push_back(post);
    return v;
    
}
