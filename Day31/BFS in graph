#include<bits/stdc++.h>
vector<int>bfs(int v,vector<int>adj[],vector<int>&res,vector<bool>&vis){
    queue<int>q;
    q.push(v);
  
    vis[v]=true;
//     vector<int> res;
    while(!q.empty()){
        int t=q.front();
        q.pop();
        res.push_back(t);
        for(auto i:adj[t])
            if(!vis[i]){
                vis[i]=true;
            q.push(i);
            }
        
    }
    return res;
}
vector<int> BFS(int V, vector<pair<int, int>> edges)
{
    // Write your code here
    vector<int>adj[V];
      vector<bool>vis(V,false);
    for(int i=0;i<edges.size();i++){
        adj[edges[i].first].push_back(edges[i].second);
        adj[edges[i].second].push_back(edges[i].first);
        
    }
    for(int i=0;i<V;i++)sort(adj[i].begin(),adj[i].end());
    vector<int> res;
    for(int i=0;i<V;i++){
        if(!vis[i])
        bfs(i,adj,res,vis);
    }
   return res;
}
