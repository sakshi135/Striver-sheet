#include<bits/stdc++.h>
void dfs(int i,vector<int>adj[],vector<bool>&vis,stack<int>&st){
    vis[i]=1;
    for(auto it:adj[i]){
        if(!vis[it])dfs(it,adj,vis,st);
    }
    st.push(i);
}
vector<int> topologicalSort(vector<vector<int>> &edges, int v, int e)  {
    // Write your code here
    vector<int>adj[v];
    for(int i=0;i<e;i++)
        adj[edges[i][0]].push_back(edges[i][1]);
    for(int i=0;i<v;i++)sort(adj[i].begin(),adj[i].end());
    vector<bool>vis(v,0);
    stack<int> st;
    for(int i=0;i<v;i++){
        if(!vis[i])dfs(i,adj,vis,st);
    }
    vector<int>ans;
    while(!st.empty()){
        ans.push_back(st.top());
        st.pop();
    }
   return ans; 
}
