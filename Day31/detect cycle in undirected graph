int dfs(int node,int parent ,vector<bool>&vis,vector<int>adj[]){
    vis[node]=true;
    for(int i:adj[node]){
        if(!vis[i]){if(dfs(i,node,vis,adj))return 1;
                   }
        else if(i!=parent)return 1;
    }
    return 0;
}
string cycleDetection (vector<vector<int>>& edges, int n, int m)
{
    // Write your code here.
    vector<int>adj[n+1];
    for(int i=0;i<m;i++){
        adj[edges[i][0]].push_back(edges[i][1]);
        adj[edges[i][1]].push_back(edges[i][0]);
    }
    vector<bool>vis(n+1,false);
    for(int i=1;i<=n;i++){
        if(!vis[i])if(dfs(i,-1,vis,adj))return "Yes";
    }
    return "No";
}
